In this project, we developed a mobile application to facilitate the self-assessment and screening of multidimensional frailty among the elderly. This prototype is written in Flutter for the application and Java Spring Boot for the application server. This research paper details the methodology we used to develop the application server, including the functional and non-functional requirements we had to satisfy.

Many design decisions and trade-offs had to be made during ideation. This paper elaborates on the rationale and justification for each decision, both from 1) a technical software engineering perspective in order to meet non-functional (ISO25010) requirements, and 2) a non-technical perspective, taking into account practical business constraints. Through this multidimensional discussion, we hope to present a more holistic view of software development outside of traditional system design paradigms and principles, which are often technical-focused.

Design patterns were also applied during development when we found difficulty in storing information about the questionnaire, since each question has their own set of options and scoring methods which initially made it hard to capture and program for. Through applying the “strategy design pattern”, we reduced the questions to a few scoring strategies (e.g., Yes/No, multiple choice, multi-part) and applied the appropriate strategy during code execution to keep our code simple and general.

In conclusion, we developed a robust application that satisfies its functional and non-functional requirements while remaining in line with the business constraints. The result is an affordable, maintainable, scalable, and performant system that will support the running of our application.